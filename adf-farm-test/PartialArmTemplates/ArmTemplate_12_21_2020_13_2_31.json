{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-farm-test"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/MoveFile')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Move files from one folder to another folder",
				"activities": [
					{
						"name": "CopyAFile_copy1",
						"description": "Copy a file from the source store to the destination store.",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None",
								"recursive": false
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"dataIntegrationUnits": 3,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Int32"
										},
										"sink": {
											"name": "ID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "sepal_length_cm",
											"type": "Decimal"
										},
										"sink": {
											"name": "sepal_length_cm",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "sepal_width_cm",
											"type": "Decimal"
										},
										"sink": {
											"name": "sepal_width_cm",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "petal_length_cm",
											"type": "Decimal"
										},
										"sink": {
											"name": "petal_length_cm",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "petal_width_cm",
											"type": "Decimal"
										},
										"sink": {
											"name": "petal_width_cm",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "class",
											"type": "String"
										},
										"sink": {
											"name": "class",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "collect_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "collect_date",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SQLdb_demo_data1",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "datasetparquet2",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "CopyAFile_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/frrive@microsoft.com/DeltDemoIncr"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "WebEmailSend",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Notebook1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-10.centralus.logic.azure.com:443/workflows/7adde89a9e6b44c79957612bb5324ef5/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=r4U2b4E3v7b582vquoauEpedRXiWt3hoeT_FUejkEiY",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"DataFactoryName": "@{pipeline().DataFactory}",
								"PipelineName": "@{pipeline().Pipeline}",
								"Subject": "Pipeline finished",
								"ErrorMessage": "Please check if everything is Ok!",
								"EmailTo": "fredyrivera@outlook.com"
							}
						}
					}
				],
				"parameters": {
					"SourceStore_Location": {
						"type": "String",
						"defaultValue": "path-test"
					},
					"SourceStore_Directory": {
						"type": "String"
					},
					"DestinationStore_Location": {
						"type": "String",
						"defaultValue": "path-test"
					},
					"DestinationStore_Directory": {
						"type": "String",
						"defaultValue": "land"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQLdb_demo_data1')]",
				"[concat(variables('factoryId'), '/datasets/datasetparquet2')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_data_test_rename')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupMonth",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select distinct class, month(collect_date) month from dbo.iris_demo_data",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLdb_demo_data1",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupMonth",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupMonth').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data Parquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT  [sepal_length_cm]\n      ,[sepal_width_cm]\n      ,[petal_length_cm]\n      ,[petal_width_cm]\n      ,[class]\n      ,[collect_date]\n  FROM [dbo].[iris_demo_data]\nwhere month(collect_date)  = ', item().month, ' and class = ''', item().class, '''')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "sepal_length_cm",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 2,
														"precision": 8
													},
													"sink": {
														"name": "sepal_length_cm",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "sepal_width_cm",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 2,
														"precision": 8
													},
													"sink": {
														"name": "sepal_width_cm",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "petal_length_cm",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 2,
														"precision": 8
													},
													"sink": {
														"name": "petal_length_cm",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "petal_width_cm",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 2,
														"precision": 8
													},
													"sink": {
														"name": "petal_width_cm",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "class",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "class",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "collect_date",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "collect_date",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SQLdb_demo_data1",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "datasetparquet1",
											"type": "DatasetReference",
											"parameters": {
												"Directory": {
													"value": "@pipeline().parameters.Directory_output",
													"type": "Expression"
												},
												"Month": {
													"value": "@item().month",
													"type": "Expression"
												},
												"Container": {
													"value": "@pipeline().parameters.Source_Container",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"concurrency": 1,
				"parameters": {
					"Directory_input": {
						"type": "string"
					},
					"Directory_output": {
						"type": "string",
						"defaultValue": "land"
					},
					"Source_Container": {
						"type": "string",
						"defaultValue": "path-test"
					},
					"Destination_Container": {
						"type": "string",
						"defaultValue": "path-test"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQLdb_demo_data1')]",
				"[concat(variables('factoryId'), '/datasets/datasetparquet1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BinaryDataDestination5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "It describes the destination store.",
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "String"
					},
					"Directory": {
						"type": "String"
					},
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@{dataset().Directory}",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@{dataset().Container}",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BinaryDataSource_File5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "It describes the file in the data source store.",
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "String"
					},
					"Directory": {
						"type": "String"
					},
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@{dataset().Directory}",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@{dataset().Container}",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BinaryDataSource_Folder2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "It describes the folder in the data source store.",
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "String"
					},
					"Directory": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@{dataset().Directory}",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@{dataset().Container}",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLdb_demo_data1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "sepal_length_cm",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "sepal_width_cm",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "petal_length_cm",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "petal_width_cm",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "class",
						"type": "varchar"
					},
					{
						"name": "collect_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "iris_demo_data"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/datasetparquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Directory": {
						"type": "string"
					},
					"Month": {
						"type": "string"
					},
					"Container": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "iris_demo_data_parquet",
						"folderPath": {
							"value": "@dataset().Directory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					},
					"compressionCodec": "gzip"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/datasetparquet2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "iris_demo_data.parquet",
						"folderPath": "land",
						"fileSystem": "path-test"
					},
					"compressionCodec": "gzip"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-8492237815337527.7.azuredatabricks.net",
					"authentication": "MSI",
					"workspaceResourceId": "/subscriptions/01ec9abb-4805-4f32-819b-9c727439f12d/resourceGroups/Personal/providers/Microsoft.Databricks/workspaces/databricks-test",
					"existingClusterId": "1112-213252-steak640"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1Daily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "MoveFile",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceStore_Location": "path-test",
							"SourceStore_Directory": "land",
							"DestinationStore_Location": "path-test",
							"DestinationStore_Directory": "land"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2020-12-03T21:28:00",
						"timeZone": "Pacific Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/MoveFile')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SQLdb_demo_data1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Parquet1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tID as integer,\n\t\tsepal_length_cm as decimal(8,2),\n\t\tsepal_width_cm as decimal(8,2),\n\t\tpetal_length_cm as decimal(8,2),\n\t\tpetal_width_cm as decimal(8,2),\n\t\tclass as string,\n\t\tcollect_date as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_COMMITTED',\n\tformat: 'table',\n\tpartitionBy('key',\n\t\t0,\n\t\tclass\n\t)) ~> source1\nsource1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\trowUrlColumn:'class',\n\ttruncate: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQLdb_demo_data1')]"
			]
		}
	]
}