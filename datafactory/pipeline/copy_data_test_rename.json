{
	"name": "copy_data_test_rename",
	"properties": {
		"activities": [
			{
				"name": "LookupMonth",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select distinct class, month(collect_date) month from dbo.iris_demo_data",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SQLdb_demo_data1",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "LookupMonth",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LookupMonth').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy data Parquet",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@concat('SELECT  [sepal_length_cm]\n      ,[sepal_width_cm]\n      ,[petal_length_cm]\n      ,[petal_width_cm]\n      ,[class]\n      ,[collect_date]\n  FROM [dbo].[iris_demo_data]\nwhere month(collect_date)  = ', item().month, ' and class = ''', item().class, '''')",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings",
										"copyBehavior": "FlattenHierarchy"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"name": "sepal_length_cm",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 2,
												"precision": 8
											},
											"sink": {
												"name": "sepal_length_cm",
												"type": "Decimal",
												"physicalType": "DECIMAL"
											}
										},
										{
											"source": {
												"name": "sepal_width_cm",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 2,
												"precision": 8
											},
											"sink": {
												"name": "sepal_width_cm",
												"type": "Decimal",
												"physicalType": "DECIMAL"
											}
										},
										{
											"source": {
												"name": "petal_length_cm",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 2,
												"precision": 8
											},
											"sink": {
												"name": "petal_length_cm",
												"type": "Decimal",
												"physicalType": "DECIMAL"
											}
										},
										{
											"source": {
												"name": "petal_width_cm",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 2,
												"precision": 8
											},
											"sink": {
												"name": "petal_width_cm",
												"type": "Decimal",
												"physicalType": "DECIMAL"
											}
										},
										{
											"source": {
												"name": "class",
												"type": "String",
												"physicalType": "varchar"
											},
											"sink": {
												"name": "class",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "collect_date",
												"type": "DateTime",
												"physicalType": "datetime"
											},
											"sink": {
												"name": "collect_date",
												"type": "DateTime",
												"physicalType": "INT_96"
											}
										}
									],
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "SQLdb_demo_data1",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "datasetparquet1",
									"type": "DatasetReference",
									"parameters": {
										"Directory": {
											"value": "@pipeline().parameters.Directory_output",
											"type": "Expression"
										},
										"Month": {
											"value": "@item().month",
											"type": "Expression"
										},
										"Class": {
											"value": "@item().class",
											"type": "Expression"
										},
										"Container": {
											"value": "@pipeline().parameters.Source_Container",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"concurrency": 1,
		"parameters": {
			"Directory_input": {
				"type": "string"
			},
			"Directory_output": {
				"type": "string",
				"defaultValue": "land"
			},
			"Source_Container": {
				"type": "string",
				"defaultValue": "path-test"
			},
			"Destination_Container": {
				"type": "string",
				"defaultValue": "path-test"
			}
		},
		"annotations": []
	}
}